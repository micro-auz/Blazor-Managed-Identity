@page "/people"
@using DataLibrary
@using AuzBlazorServerApp1.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccessMySQL _data

@inject IConnectionStringBuilder _connection

@inject IWebHostEnvironment Env


<h3>People</h3>

<button class="btn btn-primary" @onclick="InsertData">Insert</button>
<button class="btn btn-warning" @onclick="UpdateData">Update</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

@if (people == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var p in people)
    {
        <p>
            @p.FirstName @p.LastName
        </p>
    }
}

@code {
    List<Person> people;

    private async Task InsertData()
    {
        //var connectionString = _config.GetValue<string>("SqlConnectionString");

        var connectionString = await _connection.GetConnectionString(Env.IsProduction());

        string sql = "insert into people (FirstName, LastName) values (@FirstName, @LastName);";

        await _data.SaveData(sql, new { FirstName = "Billy", LastName = "Bob" }, connectionString);

        await OnInitializedAsync();
    }

    private async Task UpdateData()
    {
        //var connectionString = _config.GetValue<string>("SqlConnectionString");
        var connectionString = await _connection.GetConnectionString(Env.IsProduction());

        string sql = "update people set FirstName = @FirstName where LastName = @LastName";

        await _data.SaveData(sql, new { FirstName = "Timothy", LastName = "Bob" }, connectionString);

        await OnInitializedAsync();
    }

    private async Task DeleteData()
    {
        //var connectionString = _config.GetValue<string>("SqlConnectionString");
        var connectionString = await _connection.GetConnectionString(Env.IsProduction());

        string sql = "delete from people where LastName = @LastName";

        await _data.SaveData(sql, new { LastName = "Bob" }, connectionString);

        await OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from people";
        //people = await _data.LoadData<Person, dynamic>(sql, new { }, _config.GetConnectionString("default"));

        //var connectionString = _config.GetValue<string>("SqlConnectionString");
        var connectionString = await _connection.GetConnectionString(Env.IsProduction());

        System.Diagnostics.Debug.WriteLine("This is the connectionString2:" + connectionString);

        //System.Diagnostics.Debug.WriteLine("This is the people connectionString:" + connectionString);
        people = await _data.LoadData<Person, dynamic>(sql, new { }, connectionString);
}
}